
R version 3.3.1 (2016-06-21) -- "Bug in Your Hair"
Copyright (C) 2016 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin13.4.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "quotedargs"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('quotedargs')
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("quotedargs")
> ### * quotedargs
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: quotedargs-package
> ### Title: Facility for using quoted arguments
> ### Aliases: quotedargs-package quoted_arg notquoted quoted_eval
> ###   quoted_environment quoted_assign
> 
> ### ** Examples
> 
> # A simple example in which both the expression passed and its value
> # are used.
> 
> showmean <- function (v) {
+     quoted_arg(v)
+     cat ("Mean of", deparse(v), "is", mean(quoted_eval(v)), "\n")
+ }
> 
> showmean(100+(1:3))                   # Will print 100 + (1:3)
Mean of 100 + (1:3) is 102 
> showmean(notquoted(100+(1:3)))        # Will print c(101, 102, 103)
Mean of c(101, 102, 103) is 102 
> 
> # A function that uses the function above, passing along its quoted 
> # argument.
> 
> showmeansummary <- function (u) {
+     quoted_arg(u)
+     cat("Summary: ")
+     showmean(u)
+ }
> 
> showmeansummary(100+(1:3))            # Will print 100 + (1:3)
Summary: Mean of 100 + (1:3) is 102 
> showmeansummary(notquoted(100+(1:3))) # Will print c(101, 102, 103)
Summary: Mean of c(101, 102, 103) is 102 
> 
> u <- v <- 100+(1:3)   # Evaluation of showmeansummary's argument
> showmeansummary(u)    #   is done in the global environment, not
Summary: Mean of u is 102 
> showmeansummary(v)    #   that of showmeansummary or showmean
Summary: Mean of v is 102 
> 
> 
> # An illustration of quoted arguments being evaluated many times.
> 
> prsim <- function (a,b,n) {
+     quoted_arg(a,b)
+     cat ("Running simulation to find probability that all\n")
+     cat (deparse(a), "are greater than all", deparse(b), "\n")
+     count <- 0
+     for (i in 1:n) {
+         if (min(quoted_eval(a)) > max(quoted_eval(b)))
+             count <- count + 1
+     }
+     count / n
+ }
> 
> set.seed(1)
> prsim (rexp(10,0.1), rnorm(10,1), 1000)
Running simulation to find probability that all
rexp(10, 0.1) are greater than all rnorm(10, 1) 
[1] 0.103
> 
> 
> # Creating a variable looking that behaves like a quoted argument.
> 
> quoted_assign("x",runif(1))
NULL
> 
> set.seed(1)
> cat (paste0("Two evaluations of ",deparse(x),": "),
+      quoted_eval(x), quoted_eval(x),
+      "\n")
Two evaluations of runif(1):  0.2655087 0.3721239 
> 
> 
> # Examples of when quotation of an argument is passed on.
> 
> qfun1 <- function (x) { quoted_arg(x); list(x,quoted_eval(x)) }
> 
> qfun2 <- function (y) {
+     quoted_arg(y)
+     a <- y
+     quoted_assign ("b", y)
+     list(qfun1(y),qfun1((y)),qfun1(a),qfun1(b))
+ }
> 
> qfun2(1+2)
[[1]]
[[1]][[1]]
1 + 2

[[1]][[2]]
[1] 3


[[2]]
[[2]][[1]]
(y)

[[2]][[2]]
1 + 2


[[3]]
[[3]][[1]]
a

[[3]][[2]]
1 + 2


[[4]]
[[4]][[1]]
1 + 2

[[4]][[2]]
[1] 3


> 
> 
> 
> ### * <FOOTER>
> ###
> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  0.084 0.004 0.088 0 0 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
